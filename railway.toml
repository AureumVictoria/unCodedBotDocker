# UnCoded Trading Bot - Railway Configuration
# Dieses File deployt alle Services automatisch

[build]
  builder = "nixpacks"

# PostgreSQL Database
[[services]]
name  = "postgres"
image = "postgres:16-alpine"

  [services.postgres.variables]
  POSTGRES_DB       = "tradingbot"
  POSTGRES_USER     = "postgres"
  POSTGRES_PASSWORD = "${RAILWAY_PASSWORD}"

  [[services.postgres.volumes]]
  mount = "/var/lib/postgresql/data"
  name  = "postgres-data"

# Trading Bot Service
[[services]]
name  = "trading-bot"
image = "aureumvictoria/unCodedBotDocker:latest"

  [services.trading-bot.variables]
  # Nutze den DOCKER_ENV-Branch für individuelle PG-Variablen
  DOCKER_ENV        = "true"
  POSTGRES_HOST     = "${postgres.PGHOST}"
  POSTGRES_PORT     = "${postgres.PGPORT}"
  POSTGRES_DB       = "${postgres.PGDATABASE}"
  POSTGRES_USER     = "${postgres.PGUSER}"
  POSTGRES_PASSWORD = "${postgres.PGPASSWORD}"
  # Fallback für Bibliotheken, die DATABASE_URL brauchen
  DATABASE_URL      = "${postgres.RAILWAY_URL}"
  # Binance API placeholders
  API_KEY           = ""
  API_SECRET        = ""

  [services.trading-bot.deploy]
  restartPolicyType      = "ON_FAILURE"
  restartPolicyMaxRetries = 10

# Telegram Bot Service
[[services]]
name  = "telegram-bot"
image = "aureumvictoria/unCodedBotDocker:latest"

  [services.telegram-bot.variables]
  # Nutzt nur DATABASE_URL für Verbindung
  DATABASE_URL      = "${postgres.RAILWAY_URL}"
  TELEGRAM_BOT_TOKEN = ""
  TELEGRAM_GROUP_ID  = ""
  TELEGRAM_OWNER_ID  = ""

  [services.telegram-bot.deploy]
  restartPolicyType      = "ON_FAILURE"
  restartPolicyMaxRetries = 5
