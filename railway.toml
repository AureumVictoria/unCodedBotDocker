# UnCoded Trading Bot - Finale Railway Konfiguration
[build]
builder = "NIXPACKS"

# Service 1: PostgreSQL Datenbank
[[services]]
name = "postgres"
image = "postgres:16-alpine"
restartPolicy = "on-failure"
  [services.postgres.variables]
  POSTGRES_DB = "tradingbot"
  POSTG-RES_USER = "postgres"
  POSTGRES_PASSWORD = "${RAILWAY_PASSWORD}"
  [[services.postgres.volumes]]
  mount = "/var/lib/postgresql/data"
  name = "postgres-data"

# Service 2: Der Trading-Bot
[[services]]
name = "trading-bot"
image = "./"
restartPolicy = "on-failure"
  [services.trading-bot.variables]
  # Einzelne Variablen für deinen Code
  POSTGRES_HOST = "${postgres.PGHOST}"
  POSTGRES_PORT = "${postgres.PGPORT}"
  POSTGRES_DB = "${postgres.PGDATABASE}"
  POSTGRES_USER = "${postgres.PGUSER}"
  POSTGRES_PASSWORD = "${postgres.PGPASSWORD}"
  # HINZUGEFÜGT: Der vollständige Verbindungs-String als Fallback
  DATABASE_URL = "postgresql://${postgres.PGUSER}:${postgres.PGPASSWORD}@${postgres.PGHOST}:${postgres.PGPORT}/${postgres.PGDATABASE}"
  DOCKER_ENV = "true"
  API_KEY = "" 
  API_SECRET = ""

# Service 3: Der Telegram-Bot
[[services]]
name = "telegram-bot"
image = "./"
startCommand = "node tgbot.js"
restartPolicy = "on-failure"
  [services.telegram-bot.variables]
  # Einzelne Variablen für deinen Code
  POSTGRES_HOST = "${postgres.PGHOST}"
  POSTGRES_PORT = "${postgres.PGPORT}"
  POSTGRES_DB = "${postgres.PGDATABASE}"
  POSTGRES_USER = "${postgres.PGUSER}"
  POSTGRES_PASSWORD = "${postgres.PGPASSWORD}"
  # HINZUGEFÜGT: Der vollständige Verbindungs-String als Fallback
  DATABASE_URL = "postgresql://${postgres.PGUSER}:${postgres.PGPASSWORD}@${postgres.PGHOST}:${postgres.PGPORT}/${postgres.PGDATABASE}"
  TELEGRAM_BOT_TOKEN = ""
  TELEGRAM_GROUP_ID = ""
  TELEGRAM_OWNER_ID = ""