# Finales, sicheres Dockerfile für ./trading-bot/
# Version: 2025-08-01 (Revised)

# STAGE 1: Builder - Baut die Anwendung und das Executable
FROM node:18-bullseye-slim AS builder
WORKDIR /app
COPY package*.json ./
RUN npm install
COPY . .

# Verschleiere den Code mit einer stabilen Konfiguration
RUN npx javascript-obfuscator . \
    --output ./build/obfuscated \
    --exclude '**/node_modules/**' \
    --compact true \
    --control-flow-flattening true \
    --control-flow-flattening-threshold 1 \
    --dead-code-injection true \
    --dead-code-injection-threshold 1 \
    --rename-globals true \
    --string-array true \
    --string-array-encoding 'base64' \
    --string-array-rotate true \
    --split-strings true \
    --transform-object-keys true \
    --unicode-escape-sequence true \
    --identifier-names-generator 'mangled' \
    --target 'node'

# Packe die Anwendung mit pkg. Liest Konfiguration aus package.json ("bin").
RUN npx pkg . --targets node18-linux-x64 --output /app/trading-bot-executable


# STAGE 2: Das finale, schlanke Image für den Betrieb
FROM debian:bookworm-slim
WORKDIR /app

# Erstelle einen dedizierten, unprivilegierten Benutzer für mehr Sicherheit
RUN useradd --system --uid 1001 --create-home appuser

# Kopiere das Executable vom Builder-Stage
COPY --from=builder /app/trading-bot-executable /app/trading-bot

# KORREKTUR: Erstelle das benötigte Log-Verzeichnis und setze die korrekten Berechtigungen
RUN mkdir -p /app/logs && chown -R appuser:appuser /app

# Wechsle zum unprivilegierten Benutzer
USER appuser

# KORREKTUR: Setze den korrekten Startbefehl. 'exec' ersetzt den Shell-Prozess durch den Bot,
# was für korrektes Signal-Handling sorgt.
CMD exec ./trading-bot