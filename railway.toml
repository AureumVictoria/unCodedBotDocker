# railway.toml
# Finale, korrigierte Konfiguration.
# Diese Datei erstellt die Dienste UND stellt die Verbindung zur Datenbank automatisch her.

# Globale Build-Einstellungen
[build]
builder = "DOCKER"

# Globale Deployment-Einstellungen
[deploy]
restartPolicy = "ON_FAILURE"
restartPolicyMaxRetries = 10

# --- Definition des Trading-Bot-Dienstes ---
[[services]]
name = "trading-bot"
dockerfilePath = "./trading-bot/Dockerfile"

# --- Definition des Telegram-Bot-Dienstes ---
[[services]]
name = "telegram-bot"
dockerfilePath = "./telegram-bot/Dockerfile"

# --- Definition des Datenbank-Dienstes ---
# Erstellt einen von Railway verwalteten PostgreSQL-Dienst.
# Basierend auf Ihrem Screenshot wird dieser Dienst "trading-postgres" heißen.
[plugins.postgres]
name = "trading-postgres"


# --- Variablen für den Trading-Bot ---
# Diese Sektion verknüpft den "trading-bot" Dienst mit den Datenbank-Variablen.
[services.trading-bot.variables]
POSTGRES_HOST = "${{trading-postgres.PGHOST}}"
POSTGRES_USER = "${{trading-postgres.PGUSER}}"
POSTGRES_PASSWORD = "${{trading-postgres.PGPASSWORD}}"
POSTGRES_DB = "${{trading-postgres.PGDATABASE}}"
POSTGRES_PORT = "${{trading-postgres.PGPORT}}"
DOCKER_ENV = "true"
# WICHTIG: Setzen Sie Ihre echten API-Keys in der Railway-Weboberfläche!
API_KEY = ""
API_SECRET = ""


# --- Variablen für den Telegram-Bot ---
# Diese Sektion verknüpft den "telegram-bot" Dienst mit den Datenbank-Variablen.
[services.telegram-bot.variables]
POSTGRES_HOST = "${{trading-postgres.PGHOST}}"
POSTGRES_USER = "${{trading-postgres.PGUSER}}"
POSTGRES_PASSWORD = "${{trading-postgres.PGPASSWORD}}"
POSTGRES_DB = "${{trading-postgres.PGDATABASE}}"
POSTGRES_PORT = "${{trading-postgres.PGPORT}}"
# WICHTIG: Setzen Sie Ihre echten Telegram-Secrets in der Railway-Weboberfläche!
TELEGRAM_BOT_TOKEN = ""
TELEGRAM_GROUP_ID = ""
TELEGRAM_OWNER_ID = ""
