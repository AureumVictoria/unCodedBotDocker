# UnCoded Trading Bot - Railway Configuration
# This file automatically deploys all services

[build]
builder = "nixpacks"

# PostgreSQL Database
[[services]]
name = "postgres"
image = "postgres:16-alpine"

  [services.postgres.variables]
  POSTGRES_DB = "tradingbot"
  POSTGRES_USER = "postgres"
  # Railway generiert automatisch ein sicheres Passwort
  POSTGRES_PASSWORD = "${{RAILWAY_PASSWORD}}"

  [[services.postgres.volumes]]
  mount = "/var/lib/postgresql/data"
  name = "postgres-data"

# Trading Bot Service
[[services]]
name = "trading-bot"
image = "aureumvictoria/unCodedBotDocker:latest"

  [services.trading-bot.variables]
  # Interne Railway Verbindung zu Postgres
  POSTGRES_HOST = "${{postgres.RAILWAY_PRIVATE_DOMAIN}}"
  POSTGRES_PORT = "5432"
  POSTGRES_DB = "tradingbot"
  POSTGRES_USER = "postgres"
  POSTGRES_PASSWORD = "${{postgres.POSTGRES_PASSWORD}}"
  DOCKER_ENV = "true"
  
  # Platzhalter für Binance API - User muss diese nach Deploy setzen
  API_KEY = ""
  API_SECRET = ""

  # Restart bei Fehler
  [services.trading-bot.deploy]
  restartPolicyType = "ON_FAILURE"
  restartPolicyMaxRetries = 10

# Telegram Bot Service  
[[services]]
name = "telegram-bot"
image = "aureumvictoria/telegram-bot-secure:latest"

  [services.telegram-bot.variables]
  # Interne Railway Verbindung zu Postgres
  POSTGRES_HOST = "${{postgres.RAILWAY_PRIVATE_DOMAIN}}"
  POSTGRES_PORT = "5432"
  POSTGRES_DB = "tradingbot"
  POSTGRES_USER = "postgres"
  POSTGRES_PASSWORD = "${{postgres.POSTGRES_PASSWORD}}"
  
  # Platzhalter für Telegram - User muss diese nach Deploy setzen
  TELEGRAM_BOT_TOKEN = ""
  TELEGRAM_GROUP_ID = ""
  TELEGRAM_OWNER_ID = ""

  # Restart bei Fehler
  [services.telegram-bot.deploy]
  restartPolicyType = "ON_FAILURE"
  restartPolicyMaxRetries = 5